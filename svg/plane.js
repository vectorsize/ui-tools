// Generated by CoffeeScript 1.9.0
var Plane, accessors, bind, chain, d3, emmiter, ref, scale;

ref = require('tools/object'), bind = ref.bind, chain = ref.chain, accessors = ref.accessors, emmiter = ref.emmiter;

scale = require('tools/d3-scales').scale;

d3 = require('d3');

Plane = (function() {
  function Plane() {
    var accessorList;
    if (!(this instanceof Plane)) {
      return new Plane;
    }
    accessorList = ['id', 'width', 'height', 'xscale', 'yscale', 'top', 'right', 'bottom', 'left', 'clamps'];
    chain(this).use(accessors, accessorList);
    this.xscale = scale.linear();
    this.yscale = scale.linear();
    this.top(0);
    this.right(0);
    this.bottom(0);
    this.left(0);
    this.width(0);
    this.height(0);
  }

  Plane.prototype.clamp = function(value, extent) {
    var max, min;
    min = extent[0];
    max = extent[1];
    if (value <= min || value >= max) {
      return Math.min(Math.max(value, Math.min(min, max)), Math.max(min, max));
    }
    return value;
  };

  Plane.prototype.mount = function(context) {
    this.offsetx = this.left + this.right;
    this.offsety = this.top + this.bottom;
    this.width(this.width() - this.offsetx);
    this.height(this.height() - this.offsety);
    this.xscale.domain([this.left(), this.width() + this.left()]);
    this.yscale.domain([this.top(), this.height() + this.top()]);
    this.g = context.append('g').attr("class", "margin-" + this.id + " margin").attr("transform", "translate(" + (this.left()) + ", " + (this.top()) + ")");
    this.area = context.append('rect').attr("width", this.width()).attr("height", this.height()).attr("fill", "red").style({
      "opacity": 0.25,
      "pointer-events": 'none'
    });
    return this;
  };

  return Plane;

})();

module.exports = Plane;

//# sourceMappingURL=plane.js.map
