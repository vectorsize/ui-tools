// Generated by CoffeeScript 1.9.0
var Shape, ShapeSVG, accessors, bind, chain, emmiter, ref, scale,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

ref = require('tools/object'), bind = ref.bind, chain = ref.chain, accessors = ref.accessors, emmiter = ref.emmiter;

Shape = require('ui-lib/shape');

scale = require('tools/d3-scales').scale;

ShapeSVG = (function(superClass) {
  extend(ShapeSVG, superClass);

  function ShapeSVG() {
    var accessorList;
    if (!(this instanceof ShapeSVG)) {
      return new ShapeSVG;
    }
    ShapeSVG.__super__.constructor.call(this);
    accessorList = ['width', 'height'];
    chain(this).use(accessors, accessorList).use(bind, 'draw');
    this.x(0);
    this.y(0);
    this.xscale = scale.linear();
    this.yscale = scale.linear();
  }

  ShapeSVG.prototype.x = function(v) {
    if (v == null) {
      v = null;
    }
    if (v === null) {
      return this._x;
    }
    this._x = v - this.halfWidth();
    return this;
  };

  ShapeSVG.prototype.y = function(v) {
    if (v == null) {
      v = null;
    }
    if (v === null) {
      return this._y;
    }
    this._y = v - this.halfHeight();
    return this;
  };

  ShapeSVG.prototype.halfWidth = function() {
    return this.width() * 0.5;
  };

  ShapeSVG.prototype.halfHeight = function() {
    return this.height() * 0.5;
  };

  ShapeSVG.prototype.draw = function(handle) {
    this.handle = handle;
    this.context = this.handle.context.append('g');
    return this.context.append("rect").attr("width", this.width()).attr("height", this.height());
  };

  ShapeSVG.prototype.update = function() {
    return this.context.attr("transform", "translate(" + (this.x()) + ", 0)");
  };

  return ShapeSVG;

})(Shape);

module.exports = ShapeSVG;

//# sourceMappingURL=shape.js.map
